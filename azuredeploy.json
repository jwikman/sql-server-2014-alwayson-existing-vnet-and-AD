{
   "$schema" : "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion" : "1.0.0.0",
   "parameters" : {
      "namePrefix" : {
         "type" : "string",
         "metadata" : {
            "description" : "Naming prefix for each new resource created. 8-char max, lowercase alphanumeric"
         }
      },
      "storageAccountType" : {
         "type" : "string",
         "allowedValues" : [ "Standard_LRS", "Standard_GRS", "Standard_RAGRS", "Premium_LRS" ],
         "metadata" : {
            "description" : "Type of new Storage Accounts (Standard_LRS, Standard_GRS, Standard_RAGRS or Premium_LRS) to be created to store VM disks"
         },
         "defaultValue" : "Premium_LRS"
      },
      "sqlVMSize" : {
         "type" : "string",
         "allowedValues" : [
            "Standard_D1",
            "Standard_DS1",
            "Standard_D2",
            "Standard_DS2",
            "Standard_D3",
            "Standard_DS3",
            "Standard_D4",
            "Standard_DS4",
            "Standard_D11",
            "Standard_DS11",
            "Standard_D12",
            "Standard_DS12",
            "Standard_D13",
            "Standard_DS13",
            "Standard_D14",
            "Standard_DS14"
         ],
         "metadata" : {
            "description" : "Size of the SQL VMs to be created"
         },
         "defaultValue" : "Standard_DS3"
      },
      "sqlWitnessVMSize" : {
         "type" : "string",
         "allowedValues" : [
            "Standard_D1",
            "Standard_DS1",
            "Standard_D2",
            "Standard_DS2",
            "Standard_D3",
            "Standard_DS3",
            "Standard_D4",
            "Standard_DS4",
            "Standard_D11",
            "Standard_DS11",
            "Standard_D12",
            "Standard_DS12",
            "Standard_D13",
            "Standard_DS13",
            "Standard_D14",
            "Standard_DS14"
         ],
         "metadata" : {
            "description" : "Size of the Witness VM to be created"
         },
         "defaultValue" : "Standard_DS1"
      },
      "existingDomainName" : {
         "type" : "string",
         "metadata" : {
            "description" : "DNS domain name for existing Active Directory domain"
         },
         "defaultValue" : "contoso.com"
      },
      "existingDomainNetbiosName" : {
         "type" : "string",
         "metadata" : {
            "description" : "NETBIOS domain name for existing Active Directory domain"
         },
         "defaultValue" : "CONTOSO"
      },
      "adminUsername" : {
         "type" : "string",
         "metadata" : {
            "description" : "Name of the Administrator of the existing Active Directory Domain"
         }
      },
      "adminPassword" : {
         "type" : "securestring",
         "metadata" : {
            "description" : "Password for the Administrator account of the existing Active Directory Domain"
         }
      },
      "sqlServerServiceAccountUserName" : {
         "type" : "string",
         "metadata" : {
            "description" : "The SQL Server Service account name"
         }
      },
      "sqlServerServiceAccountPassword" : {
         "type" : "securestring",
         "metadata" : {
            "description" : "The SQL Server Service account password"
         }
      },
      "existingVirtualNetworkId" : {
         "type" : "string",
         "metadata" : {
            "description" : "Resource ID of the existing VNET. You can find the Resource ID for the VNET on the Properties blade of the VNET."
         }
      },
      "existingSqlSubnetName" : {
         "type" : "string",
         "metadata" : {
            "description" : "Name of the existing subnet in the existing VNET to which the SQL & Witness VMs should be deployed"
         },
         "defaultValue" : "default"
      },
      "existingAdPDCVMName" : {
         "type" : "string",
         "maxLength" : 15,
         "metadata" : {
            "description" : "Computer name of the existing Primary AD domain controller & DNS server"
         }
      },
      "sqlLBIPAddress" : {
         "type" : "string",
         "metadata" : {
            "description" : "IP address of ILB for the SQL Server AlwaysOn listener to be created"
         },
         "defaultValue" : "10.0.1.10"
      },
      "assetLocation" : {
         "type" : "string",
         "metadata" : {
            "description" : "Location of resources that the script is dependent on such as linked templates and DSC modules"
         },
         "defaultValue" : "https://raw.githubusercontent.com/jwikman/sql-server-2014-alwayson-existing-vnet-and-AD/master"
      }
   },
   "variables" : {
      "apiVersion" : "2015-01-01",
      "apiVersionNetworks" : "2015-06-15",
      "apiVersionVirtualMachines" : "2015-06-15",
      "apiVersionVMExtensions" : "2015-06-15",
      "apiVersionStorage" : "2015-06-15",
      "sqlSubnetRef" : "[concat(parameters('existingVirtualNetworkId'),'/subnets/',parameters('existingSqlSubnetName'))]",
      "deploySqlClusterTemplateURL" : "[concat(parameters('assetLocation'),'/nested/deploy-sql-cluster.json')]",
      "deploySqlCluster" : "deploySqlCluster",
      "deploySqlClusterId" : "[concat('Microsoft.Resources/deployments/', variables('deploySqlCluster'))]"
   },
   "resources" : [
      {
         "name" : "[variables('deploySqlCluster')]",
         "type" : "Microsoft.Resources/deployments",
         "apiVersion" : "[variables('apiVersion')]",
         "dependsOn" : [],
         "properties" : {
            "mode" : "Incremental",
            "templateLink" : {
               "uri" : "[variables('deploySqlClusterTemplateURL')]",
               "contentVersion" : "1.0.0.0"
            },
            "parameters" : {
               "namePrefix" : {
                  "value" : "[parameters('namePrefix')]"
               },
               "domainName" : {
                  "value" : "[parameters('existingDomainName')]"
               },
               "domainNetbiosName" : {
                  "value" : "[parameters('existingDomainNetbiosName')]"
               },
               "dnsServerName" : {
                  "value" : "[parameters('existingAdPDCVMName')]"
               },
               "adminUsername" : {
                  "value" : "[parameters('adminUsername')]"
               },
               "adminPassword" : {
                  "value" : "[parameters('adminPassword')]"
               },
               "sqlServerServiceAccountUserName" : {
                  "value" : "[parameters('sqlServerServiceAccountUserName')]"
               },
               "sqlServerServiceAccountPassword" : {
                  "value" : "[parameters('sqlServerServiceAccountPassword')]"
               },
               "storageAccountType" : {
                  "value" : "[parameters('storageAccountType')]"
               },
               "nicSubnetUri" : {
                  "value" : "[variables('sqlSubnetRef')]"
               },
               "lbSubnetUri" : {
                  "value" : "[variables('sqlSubnetRef')]"
               },
               "sqlLBIPAddress" : {
                  "value" : "[parameters('sqlLBIPAddress')]"
               },
               "sqlVMSize" : {
                  "value" : "[parameters('sqlVMSize')]"
               },
               "sqlWitnessVMSize" : {
                  "value" : "[parameters('sqlWitnessVMSize')]"
               },
               "assetLocation" : {
                  "value" : "[parameters('assetLocation')]"
               }
            }
         }
      }
   ],
   "outputs" : {}
}
